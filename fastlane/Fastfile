# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

default_platform :ios

platform :ios do
    before_all do
        ENV["SLACK_URL"] ||= "https://hooks.slack.com/services/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"
        slack(message: "Lancement de Fastlane")
    end

    after_all do
        slack(message: "Fastlane terminé")
    end

    error do|lane, exception|
        slack(
        message: exception.message,
        success: false
        )
    end

    lane :tests do
        scan(
        project: "SwifTools/SwifTools.xcodeproj",
        code_coverage: true
        )
    end

    lane :deploy do
        if git_branch() == "master"
            version = get_version_number(xcodeproj: "SwifTools/SwifTools.xcodeproj")
            set_github_release(
            repository_name: "ESGIProjects/SwifTools",
            name: version,
            tag_name: "#{version}",
            api_token: ENV["GITHUB_TOKEN"],
            description: "Mise à jour v#{version}",
            commitish: "master"
            )

            version_bump_podspec(path: "SwifTools.podspec", version_number: version)
            pod_push(path: "SwifTools.podspec")
        end
    end

    lane :local do
        version = get_version_number()
        slack(
        message: version
        )
    end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
